scdb:
AdaBoostClassifier(estimator=ExtraTreesClassifier(bootstrap=True,
                                                  criterion='entropy',
                                                  max_depth=5,
                                                  max_features=None,
                                                  min_samples_split=10,
                                                  min_weight_fraction_leaf=0,
                                                  n_estimators=20, n_jobs=10),
                   learning_rate=0.1)
Best parameters set:
        estimator__criterion: 'entropy'
        estimator__max_depth: 5
        estimator__min_samples_leaf: 1
        estimator__min_samples_split: 10
        learning_rate: 0.1
        n_estimators: 50
Test accuracy score: 66.40%



oa::
{'mean_fit_time': array([  54.5044359 ,  558.70681913,   55.01662862,  701.00400038,
         79.4123251 ,  794.6403372 ,   78.36405442,  789.88089883,
         80.73170002,  827.5654422 ,   84.43275182,  850.38937464,
         83.90391262,  851.77256656,   80.75781353,  868.47338672,
         75.08129892,  797.12448065,  235.43846753, 2036.80378137,
         54.06833439,  565.94274819,   54.08693559,  566.3494463 ,
         57.01743765,  613.73307505,   77.82463429,  731.73425255,
         67.72028193,  736.33812475,   56.45028112,  626.25807524]), 'std_fit_time': array([ 0.15954834,  0.6585148 ,  0.14406236,  1.08969594,  0.30380432,
        0.95323933,  0.30892001,  1.38913942,  0.5580103 ,  1.61889975,
        0.70504626,  1.95406183,  0.716134  ,  2.13958526,  0.86476791,
        1.55925936,  0.25033585,  1.23047875, 55.67195998,  1.00667304,
        0.62691219,  1.59119817,  0.96594196,  1.78867059,  1.8360952 ,
        6.29362148,  1.51363377,  3.7268992 ,  6.50416598,  4.63571197,
        2.6399977 ,  0.52295495]), 'mean_score_time': array([ 15.92129235, 160.42318556,  15.67224269, 172.51114943,
        17.66398926, 177.63099525,  17.74886279, 177.10415313,
        17.15523345, 171.1403441 ,  18.20337851, 171.91327369,
        17.88539326, 171.60238948,  18.34206932, 178.13588881,
        17.50299165, 182.09278452,  34.82788551, 159.38908422,
        15.2386174 , 158.937921  ,  14.94769316, 157.78470476,
        15.30343101, 169.96802759,  18.62870347, 159.60336907,
        18.21609993, 158.42363205,  15.43925667, 158.79163334]), 'std_score_time': array([4.65631415e-03, 1.02140916e-02, 1.55220592e-02, 6.59452525e-02,
       8.56403215e-02, 8.51231359e-02, 7.77710389e-02, 1.74528342e-01,
       5.36820651e-01, 4.33165393e-01, 4.35958036e-01, 8.88722363e-01,
       5.85955718e-01, 8.64909113e-01, 8.39261891e-01, 6.78677596e-01,
       1.69274699e-01, 1.52483014e+00, 5.59138602e+01, 5.91521632e-02,
       8.80672788e-02, 8.97577336e-02, 1.91948718e-01, 2.43090895e-01,
       1.98619832e-01, 1.66894707e+00, 1.60816038e+00, 8.14093908e-01,
       3.53541983e-01, 3.22818802e-01, 1.43833466e-01, 3.17950794e-01]), 'param_estimator__criterion': masked_array(data=['gini', 'gini', 'gini', 'gini', 'gini', 'gini', 'gini',
                   'gini', 'gini', 'gini', 'gini', 'gini', 'gini', 'gini',
                   'gini', 'gini', 'entropy', 'entropy', 'entropy',
                   'entropy', 'entropy', 'entropy', 'entropy', 'entropy',
                   'entropy', 'entropy', 'entropy', 'entropy', 'entropy',
                   'entropy', 'entropy', 'entropy'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_estimator__max_depth': masked_array(data=[3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3,
                   3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_estimator__min_samples_split': masked_array(data=[2, 2, 2, 2, 4, 4, 4, 4, 2, 2, 2, 2, 4, 4, 4, 4, 2, 2,
                   2, 2, 4, 4, 4, 4, 2, 2, 2, 2, 4, 4, 4, 4],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate': masked_array(data=[0.5, 0.5, 1, 1, 0.5, 0.5, 1, 1, 0.5, 0.5, 1, 1, 0.5,
                   0.5, 1, 1, 0.5, 0.5, 1, 1, 0.5, 0.5, 1, 1, 0.5, 0.5, 1,
                   1, 0.5, 0.5, 1, 1],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_n_estimators': masked_array(data=[1000, 10000, 1000, 10000, 1000, 10000, 1000, 10000,
                   1000, 10000, 1000, 10000, 1000, 10000, 1000, 10000,
                   1000, 10000, 1000, 10000, 1000, 10000, 1000, 10000,
                   1000, 10000, 1000, 10000, 1000, 10000, 1000, 10000],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'estimator__criterion': 'gini', 'estimator__max_depth': 3, 'estimator__min_samples_split': 2, 'learning_rate': 0.5, 'n_estimators': 1000}, {'estimator__criterion': 'gini', 'estimator__max_depth': 3, 'estimator__min_samples_split': 2, 'learning_rate': 0.5, 'n_estimators': 10000}, {'estimator__criterion': 'gini', 'estimator__max_depth': 3, 'estimator__min_samples_split': 2, 'learning_rate': 1, 'n_estimators': 1000}, {'estimator__criterion': 'gini', 'estimator__max_depth': 3, 'estimator__min_samples_split': 2, 'learning_rate': 1, 'n_estimators': 10000}, {'estimator__criterion': 'gini', 'estimator__max_depth': 3, 'estimator__min_samples_split': 4, 'learning_rate': 0.5, 'n_estimators': 1000}, {'estimator__criterion': 'gini', 'estimator__max_depth': 3, 'estimator__min_samples_split': 4, 'learning_rate': 0.5, 'n_estimators': 10000}, {'estimator__criterion': 'gini', 'estimator__max_depth': 3, 'estimator__min_samples_split': 4, 'learning_rate': 1, 'n_estimators': 1000}, {'estimator__criterion': 'gini', 'estimator__max_depth': 3, 'estimator__min_samples_split': 4, 'learning_rate': 1, 'n_estimators': 10000}, {'estimator__criterion': 'gini', 'estimator__max_depth': 5, 'estimator__min_samples_split': 2, 'learning_rate': 0.5, 'n_estimators': 1000}, {'estimator__criterion': 'gini', 'estimator__max_depth': 5, 'estimator__min_samples_split': 2, 'learning_rate': 0.5, 'n_estimators': 10000}, {'estimator__criterion': 'gini', 'estimator__max_depth': 5, 'estimator__min_samples_split': 2, 'learning_rate': 1, 'n_estimators': 1000}, {'estimator__criterion': 'gini', 'estimator__max_depth': 5, 'estimator__min_samples_split': 2, 'learning_rate': 1, 'n_estimators': 10000}, {'estimator__criterion': 'gini', 'estimator__max_depth': 5, 'estimator__min_samples_split': 4, 'learning_rate': 0.5, 'n_estimators': 1000}, {'estimator__criterion': 'gini', 'estimator__max_depth': 5, 'estimator__min_samples_split': 4, 'learning_rate': 0.5, 'n_estimators': 10000}, {'estimator__criterion': 'gini', 'estimator__max_depth': 5, 'estimator__min_samples_split': 4, 'learning_rate': 1, 'n_estimators': 1000}, {'estimator__criterion': 'gini', 'estimator__max_depth': 5, 'estimator__min_samples_split': 4, 'learning_rate': 1, 'n_estimators': 10000}, {'estimator__criterion': 'entropy', 'estimator__max_depth': 3, 'estimator__min_samples_split': 2, 'learning_rate': 0.5, 'n_estimators': 1000}, {'estimator__criterion': 'entropy', 'estimator__max_depth': 3, 'estimator__min_samples_split': 2, 'learning_rate': 0.5, 'n_estimators': 10000}, {'estimator__criterion': 'entropy', 'estimator__max_depth': 3, 'estimator__min_samples_split': 2, 'learning_rate': 1, 'n_estimators': 1000}, {'estimator__criterion': 'entropy', 'estimator__max_depth': 3, 'estimator__min_samples_split': 2, 'learning_rate': 1, 'n_estimators': 10000}, {'estimator__criterion': 'entropy', 'estimator__max_depth': 3, 'estimator__min_samples_split': 4, 'learning_rate': 0.5, 'n_estimators': 1000}, {'estimator__criterion': 'entropy', 'estimator__max_depth': 3, 'estimator__min_samples_split': 4, 'learning_rate': 0.5, 'n_estimators': 10000}, {'estimator__criterion': 'entropy', 'estimator__max_depth': 3, 'estimator__min_samples_split': 4, 'learning_rate': 1, 'n_estimators': 1000}, {'estimator__criterion': 'entropy', 'estimator__max_depth': 3, 'estimator__min_samples_split': 4, 'learning_rate': 1, 'n_estimators': 10000}, {'estimator__criterion': 'entropy', 'estimator__max_depth': 5, 'estimator__min_samples_split': 2, 'learning_rate': 0.5, 'n_estimators': 1000}, {'estimator__criterion': 'entropy', 'estimator__max_depth': 5, 'estimator__min_samples_split': 2, 'learning_rate': 0.5, 'n_estimators': 10000}, {'estimator__criterion': 'entropy', 'estimator__max_depth': 5, 'estimator__min_samples_split': 2, 'learning_rate': 1, 'n_estimators': 1000}, {'estimator__criterion': 'entropy', 'estimator__max_depth': 5, 'estimator__min_samples_split': 2, 'learning_rate': 1, 'n_estimators': 10000}, {'estimator__criterion': 'entropy', 'estimator__max_depth': 5, 'estimator__min_samples_split': 4, 'learning_rate': 0.5, 'n_estimators': 1000}, {'estimator__criterion': 'entropy', 'estimator__max_depth': 5, 'estimator__min_samples_split': 4, 'learning_rate': 0.5, 'n_estimators': 10000}, {'estimator__criterion': 'entropy', 'estimator__max_depth': 5, 'estimator__min_samples_split': 4, 'learning_rate': 1, 'n_estimators': 1000}, {'estimator__criterion': 'entropy', 'estimator__max_depth': 5, 'estimator__min_samples_split': 4, 'learning_rate': 1, 'n_estimators': 10000}], 'split0_test_score': array([0.78571429, 0.77142857, 0.77142857, 0.77142857, 0.78571429,
       0.77142857, 0.77142857, 0.77142857, 0.74285714, 0.72857143,
       0.72857143, 0.75714286, 0.74285714, 0.72857143, 0.72857143,
       0.72857143, 0.77142857, 0.77142857, 0.75714286, 0.77142857,
       0.77142857, 0.77142857, 0.77142857, 0.77142857, 0.74285714,
       0.72857143, 0.72857143, 0.72857143, 0.72857143, 0.71428571,
       0.74285714, 0.74285714]), 'split1_test_score': array([0.7       , 0.71428571, 0.71428571, 0.72857143, 0.71428571,
       0.7       , 0.7       , 0.7       , 0.71428571, 0.72857143,
       0.71428571, 0.72857143, 0.71428571, 0.72857143, 0.71428571,
       0.72857143, 0.74285714, 0.72857143, 0.71428571, 0.72857143,
       0.7       , 0.74285714, 0.7       , 0.72857143, 0.72857143,
       0.72857143, 0.74285714, 0.72857143, 0.68571429, 0.72857143,
       0.71428571, 0.72857143]), 'split2_test_score': array([0.67142857, 0.67142857, 0.68571429, 0.68571429, 0.68571429,
       0.67142857, 0.67142857, 0.68571429, 0.72857143, 0.7       ,
       0.71428571, 0.71428571, 0.71428571, 0.7       , 0.7       ,
       0.7       , 0.71428571, 0.68571429, 0.7       , 0.67142857,
       0.68571429, 0.68571429, 0.68571429, 0.67142857, 0.7       ,
       0.71428571, 0.71428571, 0.71428571, 0.7       , 0.71428571,
       0.71428571, 0.71428571]), 'split3_test_score': array([0.75714286, 0.71428571, 0.72857143, 0.71428571, 0.74285714,
       0.72857143, 0.72857143, 0.71428571, 0.77142857, 0.74285714,
       0.75714286, 0.74285714, 0.74285714, 0.75714286, 0.75714286,
       0.72857143, 0.72857143, 0.71428571, 0.71428571, 0.71428571,
       0.75714286, 0.71428571, 0.71428571, 0.71428571, 0.75714286,
       0.74285714, 0.74285714, 0.75714286, 0.75714286, 0.74285714,
       0.77142857, 0.75714286]), 'split4_test_score': array([0.68571429, 0.65714286, 0.64285714, 0.65714286, 0.68571429,
       0.65714286, 0.67142857, 0.67142857, 0.7       , 0.68571429,
       0.67142857, 0.7       , 0.7       , 0.7       , 0.68571429,
       0.7       , 0.68571429, 0.67142857, 0.68571429, 0.67142857,
       0.67142857, 0.67142857, 0.65714286, 0.67142857, 0.68571429,
       0.68571429, 0.68571429, 0.67142857, 0.68571429, 0.68571429,
       0.7       , 0.68571429]), 'split5_test_score': array([0.72857143, 0.74285714, 0.72857143, 0.75714286, 0.75714286,
       0.74285714, 0.74285714, 0.72857143, 0.78571429, 0.78571429,
       0.75714286, 0.77142857, 0.75714286, 0.78571429, 0.75714286,
       0.78571429, 0.71428571, 0.75714286, 0.75714286, 0.74285714,
       0.72857143, 0.74285714, 0.74285714, 0.72857143, 0.75714286,
       0.75714286, 0.74285714, 0.75714286, 0.75714286, 0.74285714,
       0.77142857, 0.77142857]), 'split6_test_score': array([0.62857143, 0.68571429, 0.65714286, 0.65714286, 0.62857143,
       0.67142857, 0.68571429, 0.64285714, 0.65714286, 0.64285714,
       0.64285714, 0.64285714, 0.65714286, 0.65714286, 0.64285714,
       0.65714286, 0.68571429, 0.65714286, 0.65714286, 0.67142857,
       0.65714286, 0.67142857, 0.68571429, 0.65714286, 0.65714286,
       0.65714286, 0.65714286, 0.65714286, 0.65714286, 0.65714286,
       0.65714286, 0.65714286]), 'split7_test_score': array([0.52173913, 0.55072464, 0.53623188, 0.56521739, 0.53623188,
       0.56521739, 0.55072464, 0.53623188, 0.47826087, 0.47826087,
       0.52173913, 0.47826087, 0.52173913, 0.50724638, 0.50724638,
       0.49275362, 0.55072464, 0.57971014, 0.55072464, 0.52173913,
       0.52173913, 0.53623188, 0.53623188, 0.5942029 , 0.49275362,
       0.50724638, 0.49275362, 0.49275362, 0.49275362, 0.50724638,
       0.49275362, 0.50724638]), 'split8_test_score': array([0.73913043, 0.73913043, 0.75362319, 0.73913043, 0.75362319,
       0.73913043, 0.73913043, 0.75362319, 0.76811594, 0.75362319,
       0.73913043, 0.73913043, 0.75362319, 0.73913043, 0.73913043,
       0.73913043, 0.75362319, 0.75362319, 0.75362319, 0.73913043,
       0.73913043, 0.75362319, 0.75362319, 0.75362319, 0.73913043,
       0.73913043, 0.73913043, 0.73913043, 0.75362319, 0.73913043,
       0.75362319, 0.73913043]), 'split9_test_score': array([0.7826087 , 0.76811594, 0.76811594, 0.76811594, 0.76811594,
       0.76811594, 0.76811594, 0.76811594, 0.75362319, 0.75362319,
       0.73913043, 0.75362319, 0.73913043, 0.75362319, 0.75362319,
       0.75362319, 0.75362319, 0.76811594, 0.75362319, 0.76811594,
       0.76811594, 0.76811594, 0.76811594, 0.76811594, 0.75362319,
       0.75362319, 0.76811594, 0.76811594, 0.75362319, 0.75362319,
       0.75362319, 0.75362319]), 'mean_test_score': array([0.70006211, 0.70151139, 0.69865424, 0.70438923, 0.7057971 ,
       0.70153209, 0.70293996, 0.69722567, 0.71      , 0.6999793 ,
       0.69857143, 0.70281573, 0.70430642, 0.70571429, 0.69857143,
       0.70140787, 0.71008282, 0.70871636, 0.70436853, 0.70004141,
       0.70004141, 0.7057971 , 0.70151139, 0.70587992, 0.70140787,
       0.70142857, 0.70142857, 0.70142857, 0.69714286, 0.69857143,
       0.70714286, 0.70571429]), 'std_test_score': array([0.07594953, 0.06215734, 0.06823636, 0.0611637 , 0.07222356,
       0.05961404, 0.06161129, 0.06683294, 0.08533834, 0.08318945,
       0.06830494, 0.08245325, 0.06721741, 0.07437452, 0.07249869,
       0.07679227, 0.05965637, 0.05785329, 0.06068177, 0.06953852,
       0.07070269, 0.06694437, 0.06610608, 0.05363831, 0.07652605,
       0.07107727, 0.07594278, 0.0775384 , 0.07629689, 0.06962684,
       0.07904269, 0.07382369]), 'rank_test_score': array([23, 16, 27, 10,  6, 15, 13, 31,  2, 26, 28, 14, 12,  9, 30, 22,  1,
        3, 11, 24, 24,  7, 16,  5, 21, 18, 18, 18, 32, 28,  4,  8])}
AdaBoostClassifier(estimator=ExtraTreesClassifier(bootstrap=True,
                                                  criterion='entropy',
                                                  max_depth=3,
                                                  max_features=None,
                                                  min_samples_leaf=3,
                                                  min_weight_fraction_leaf=0,
                                                  n_estimators=20, n_jobs=10),
                   learning_rate=0.5, n_estimators=1000)
Best parameters set:
        estimator__criterion: 'entropy'
        estimator__max_depth: 3
        estimator__min_samples_split: 2
        learning_rate: 0.5
        n_estimators: 1000
Test accuracy score: 71.01%



all:
{'mean_fit_time': array([ 68.23668878, 766.68299763,  79.81732993, 703.31983235,
        77.71163385, 751.67640729,  56.95645711, 582.62522962,
        60.02858179, 612.50002942,  60.11909983, 611.52760429,
        59.80862055, 610.99533491,  59.45153084, 610.92325149,
        56.65270929, 583.79450173,  56.14555469, 584.09448078,
        55.4471369 , 583.35657122,  55.08104832, 583.30441172,
        57.70833092, 614.10783384,  57.37655799, 613.63126066,
        56.96928461, 612.26958759,  56.76915035, 613.24761868]), 'std_fit_time': array([0.21018043, 0.67135235, 0.13254838, 0.80972648, 0.28605564,
       0.52221116, 0.1436229 , 0.66926355, 0.26592229, 0.53142952,
       0.35110924, 0.60976456, 0.5167131 , 0.67036252, 0.71973839,
       1.12683261, 0.78705934, 1.45240883, 1.47228886, 1.19721037,
       1.770447  , 1.01424652, 2.36293633, 0.71929929, 3.41754031,
       0.66468715, 3.98870438, 0.4891077 , 4.5735207 , 0.72322189,
       4.6929977 , 0.88231679]), 'mean_score_time': array([ 17.14822364, 170.89200137,  16.99840693, 171.12748184,
        17.04424427, 160.5553189 ,  15.67700648, 160.66255817,
        15.75201833, 159.85251329,  15.7092386 , 160.55825539,
        15.61126335, 160.50716391,  15.60113385, 160.03194399,
        15.22259271, 158.81291792,  15.42630413, 158.74996521,
        15.09582257, 158.2528017 ,  15.11485701, 158.28290009,
        15.69905715, 159.30263901,  15.72298338, 158.9452908 ,
        15.73014362, 158.72588048,  15.67666571, 158.12957544]), 'std_score_time': array([0.03794961, 0.18454003, 0.04719212, 0.21069021, 0.02955373,
       0.03538177, 0.02406432, 0.03833772, 0.00851693, 0.08030643,
       0.01689692, 0.03050649, 0.02160207, 0.13039069, 0.02010763,
       0.12415201, 0.12605215, 0.0820413 , 0.04239554, 0.03041842,
       0.27724631, 0.08422103, 0.2893447 , 0.26229405, 0.03578742,
       0.190671  , 0.04190778, 0.2330313 , 0.04787203, 0.1587232 ,
       0.0602031 , 0.69501821]), 'param_estimator__criterion': masked_array(data=['gini', 'gini', 'gini', 'gini', 'gini', 'gini', 'gini',
                   'gini', 'gini', 'gini', 'gini', 'gini', 'gini', 'gini',
                   'gini', 'gini', 'entropy', 'entropy', 'entropy',
                   'entropy', 'entropy', 'entropy', 'entropy', 'entropy',
                   'entropy', 'entropy', 'entropy', 'entropy', 'entropy',
                   'entropy', 'entropy', 'entropy'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_estimator__max_depth': masked_array(data=[3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3,
                   3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_estimator__min_samples_split': masked_array(data=[2, 2, 2, 2, 4, 4, 4, 4, 2, 2, 2, 2, 4, 4, 4, 4, 2, 2,
                   2, 2, 4, 4, 4, 4, 2, 2, 2, 2, 4, 4, 4, 4],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_learning_rate': masked_array(data=[0.5, 0.5, 1, 1, 0.5, 0.5, 1, 1, 0.5, 0.5, 1, 1, 0.5,
                   0.5, 1, 1, 0.5, 0.5, 1, 1, 0.5, 0.5, 1, 1, 0.5, 0.5, 1,
                   1, 0.5, 0.5, 1, 1],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_n_estimators': masked_array(data=[1000, 10000, 1000, 10000, 1000, 10000, 1000, 10000,
                   1000, 10000, 1000, 10000, 1000, 10000, 1000, 10000,
                   1000, 10000, 1000, 10000, 1000, 10000, 1000, 10000,
                   1000, 10000, 1000, 10000, 1000, 10000, 1000, 10000],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'estimator__criterion': 'gini', 'estimator__max_depth': 3, 'estimator__min_samples_split': 2, 'learning_rate': 0.5, 'n_estimators': 1000}, {'estimator__criterion': 'gini', 'estimator__max_depth': 3, 'estimator__min_samples_split': 2, 'learning_rate': 0.5, 'n_estimators': 10000}, {'estimator__criterion': 'gini', 'estimator__max_depth': 3, 'estimator__min_samples_split': 2, 'learning_rate': 1, 'n_estimators': 1000}, {'estimator__criterion': 'gini', 'estimator__max_depth': 3, 'estimator__min_samples_split': 2, 'learning_rate': 1, 'n_estimators': 10000}, {'estimator__criterion': 'gini', 'estimator__max_depth': 3, 'estimator__min_samples_split': 4, 'learning_rate': 0.5, 'n_estimators': 1000}, {'estimator__criterion': 'gini', 'estimator__max_depth': 3, 'estimator__min_samples_split': 4, 'learning_rate': 0.5, 'n_estimators': 10000}, {'estimator__criterion': 'gini', 'estimator__max_depth': 3, 'estimator__min_samples_split': 4, 'learning_rate': 1, 'n_estimators': 1000}, {'estimator__criterion': 'gini', 'estimator__max_depth': 3, 'estimator__min_samples_split': 4, 'learning_rate': 1, 'n_estimators': 10000}, {'estimator__criterion': 'gini', 'estimator__max_depth': 5, 'estimator__min_samples_split': 2, 'learning_rate': 0.5, 'n_estimators': 1000}, {'estimator__criterion': 'gini', 'estimator__max_depth': 5, 'estimator__min_samples_split': 2, 'learning_rate': 0.5, 'n_estimators': 10000}, {'estimator__criterion': 'gini', 'estimator__max_depth': 5, 'estimator__min_samples_split': 2, 'learning_rate': 1, 'n_estimators': 1000}, {'estimator__criterion': 'gini', 'estimator__max_depth': 5, 'estimator__min_samples_split': 2, 'learning_rate': 1, 'n_estimators': 10000}, {'estimator__criterion': 'gini', 'estimator__max_depth': 5, 'estimator__min_samples_split': 4, 'learning_rate': 0.5, 'n_estimators': 1000}, {'estimator__criterion': 'gini', 'estimator__max_depth': 5, 'estimator__min_samples_split': 4, 'learning_rate': 0.5, 'n_estimators': 10000}, {'estimator__criterion': 'gini', 'estimator__max_depth': 5, 'estimator__min_samples_split': 4, 'learning_rate': 1, 'n_estimators': 1000}, {'estimator__criterion': 'gini', 'estimator__max_depth': 5, 'estimator__min_samples_split': 4, 'learning_rate': 1, 'n_estimators': 10000}, {'estimator__criterion': 'entropy', 'estimator__max_depth': 3, 'estimator__min_samples_split': 2, 'learning_rate': 0.5, 'n_estimators': 1000}, {'estimator__criterion': 'entropy', 'estimator__max_depth': 3, 'estimator__min_samples_split': 2, 'learning_rate': 0.5, 'n_estimators': 10000}, {'estimator__criterion': 'entropy', 'estimator__max_depth': 3, 'estimator__min_samples_split': 2, 'learning_rate': 1, 'n_estimators': 1000}, {'estimator__criterion': 'entropy', 'estimator__max_depth': 3, 'estimator__min_samples_split': 2, 'learning_rate': 1, 'n_estimators': 10000}, {'estimator__criterion': 'entropy', 'estimator__max_depth': 3, 'estimator__min_samples_split': 4, 'learning_rate': 0.5, 'n_estimators': 1000}, {'estimator__criterion': 'entropy', 'estimator__max_depth': 3, 'estimator__min_samples_split': 4, 'learning_rate': 0.5, 'n_estimators': 10000}, {'estimator__criterion': 'entropy', 'estimator__max_depth': 3, 'estimator__min_samples_split': 4, 'learning_rate': 1, 'n_estimators': 1000}, {'estimator__criterion': 'entropy', 'estimator__max_depth': 3, 'estimator__min_samples_split': 4, 'learning_rate': 1, 'n_estimators': 10000}, {'estimator__criterion': 'entropy', 'estimator__max_depth': 5, 'estimator__min_samples_split': 2, 'learning_rate': 0.5, 'n_estimators': 1000}, {'estimator__criterion': 'entropy', 'estimator__max_depth': 5, 'estimator__min_samples_split': 2, 'learning_rate': 0.5, 'n_estimators': 10000}, {'estimator__criterion': 'entropy', 'estimator__max_depth': 5, 'estimator__min_samples_split': 2, 'learning_rate': 1, 'n_estimators': 1000}, {'estimator__criterion': 'entropy', 'estimator__max_depth': 5, 'estimator__min_samples_split': 2, 'learning_rate': 1, 'n_estimators': 10000}, {'estimator__criterion': 'entropy', 'estimator__max_depth': 5, 'estimator__min_samples_split': 4, 'learning_rate': 0.5, 'n_estimators': 1000}, {'estimator__criterion': 'entropy', 'estimator__max_depth': 5, 'estimator__min_samples_split': 4, 'learning_rate': 0.5, 'n_estimators': 10000}, {'estimator__criterion': 'entropy', 'estimator__max_depth': 5, 'estimator__min_samples_split': 4, 'learning_rate': 1, 'n_estimators': 1000}, {'estimator__criterion': 'entropy', 'estimator__max_depth': 5, 'estimator__min_samples_split': 4, 'learning_rate': 1, 'n_estimators': 10000}], 'split0_test_score': array([0.74285714, 0.74285714, 0.74285714, 0.74285714, 0.72857143,
       0.72857143, 0.72857143, 0.74285714, 0.72857143, 0.72857143,
       0.75714286, 0.72857143, 0.72857143, 0.72857143, 0.72857143,
       0.72857143, 0.72857143, 0.72857143, 0.71428571, 0.74285714,
       0.74285714, 0.74285714, 0.72857143, 0.74285714, 0.74285714,
       0.72857143, 0.72857143, 0.74285714, 0.74285714, 0.72857143,
       0.74285714, 0.72857143]), 'split1_test_score': array([0.72857143, 0.74285714, 0.74285714, 0.74285714, 0.72857143,
       0.74285714, 0.75714286, 0.74285714, 0.75714286, 0.75714286,
       0.75714286, 0.77142857, 0.77142857, 0.77142857, 0.75714286,
       0.77142857, 0.74285714, 0.72857143, 0.72857143, 0.72857143,
       0.72857143, 0.74285714, 0.75714286, 0.74285714, 0.75714286,
       0.75714286, 0.77142857, 0.75714286, 0.77142857, 0.75714286,
       0.77142857, 0.75714286]), 'split2_test_score': array([0.72857143, 0.72857143, 0.71428571, 0.72857143, 0.71428571,
       0.71428571, 0.71428571, 0.72857143, 0.74285714, 0.74285714,
       0.75714286, 0.75714286, 0.75714286, 0.75714286, 0.72857143,
       0.74285714, 0.71428571, 0.71428571, 0.71428571, 0.71428571,
       0.72857143, 0.72857143, 0.74285714, 0.72857143, 0.74285714,
       0.72857143, 0.74285714, 0.74285714, 0.75714286, 0.74285714,
       0.72857143, 0.74285714]), 'split3_test_score': array([0.8       , 0.78571429, 0.8       , 0.78571429, 0.78571429,
       0.78571429, 0.81428571, 0.78571429, 0.81428571, 0.8       ,
       0.81428571, 0.8       , 0.8       , 0.8       , 0.81428571,
       0.8       , 0.81428571, 0.78571429, 0.78571429, 0.8       ,
       0.81428571, 0.8       , 0.81428571, 0.8       , 0.8       ,
       0.81428571, 0.78571429, 0.81428571, 0.81428571, 0.8       ,
       0.78571429, 0.81428571]), 'split4_test_score': array([0.67142857, 0.68571429, 0.68571429, 0.68571429, 0.68571429,
       0.68571429, 0.68571429, 0.68571429, 0.68571429, 0.7       ,
       0.7       , 0.7       , 0.7       , 0.68571429, 0.7       ,
       0.7       , 0.67142857, 0.68571429, 0.68571429, 0.68571429,
       0.68571429, 0.68571429, 0.67142857, 0.68571429, 0.7       ,
       0.7       , 0.7       , 0.7       , 0.7       , 0.68571429,
       0.68571429, 0.7       ]), 'split5_test_score': array([0.75714286, 0.75714286, 0.77142857, 0.75714286, 0.74285714,
       0.75714286, 0.75714286, 0.75714286, 0.72857143, 0.75714286,
       0.72857143, 0.74285714, 0.74285714, 0.75714286, 0.74285714,
       0.75714286, 0.81428571, 0.8       , 0.77142857, 0.77142857,
       0.81428571, 0.78571429, 0.75714286, 0.77142857, 0.77142857,
       0.72857143, 0.75714286, 0.74285714, 0.74285714, 0.74285714,
       0.74285714, 0.74285714]), 'split6_test_score': array([0.67142857, 0.71428571, 0.67142857, 0.68571429, 0.65714286,
       0.71428571, 0.68571429, 0.7       , 0.7       , 0.7       ,
       0.7       , 0.7       , 0.7       , 0.7       , 0.7       ,
       0.7       , 0.68571429, 0.7       , 0.68571429, 0.68571429,
       0.7       , 0.7       , 0.68571429, 0.71428571, 0.7       ,
       0.7       , 0.7       , 0.7       , 0.7       , 0.7       ,
       0.7       , 0.7       ]), 'split7_test_score': array([0.55072464, 0.55072464, 0.52173913, 0.55072464, 0.5942029 ,
       0.55072464, 0.53623188, 0.55072464, 0.57971014, 0.57971014,
       0.56521739, 0.56521739, 0.57971014, 0.57971014, 0.56521739,
       0.56521739, 0.5942029 , 0.56521739, 0.53623188, 0.53623188,
       0.55072464, 0.53623188, 0.56521739, 0.53623188, 0.57971014,
       0.57971014, 0.57971014, 0.5942029 , 0.56521739, 0.57971014,
       0.55072464, 0.57971014]), 'split8_test_score': array([0.82608696, 0.79710145, 0.79710145, 0.79710145, 0.79710145,
       0.79710145, 0.7826087 , 0.79710145, 0.8115942 , 0.8115942 ,
       0.79710145, 0.8115942 , 0.8115942 , 0.8115942 , 0.8115942 ,
       0.8115942 , 0.79710145, 0.7826087 , 0.7826087 , 0.79710145,
       0.8115942 , 0.79710145, 0.7826087 , 0.79710145, 0.79710145,
       0.8115942 , 0.8115942 , 0.8115942 , 0.8115942 , 0.8115942 ,
       0.8115942 , 0.8115942 ]), 'split9_test_score': array([0.76811594, 0.7826087 , 0.79710145, 0.7826087 , 0.79710145,
       0.79710145, 0.76811594, 0.79710145, 0.75362319, 0.76811594,
       0.76811594, 0.75362319, 0.76811594, 0.76811594, 0.75362319,
       0.75362319, 0.76811594, 0.76811594, 0.79710145, 0.76811594,
       0.7826087 , 0.76811594, 0.7826087 , 0.7826087 , 0.76811594,
       0.75362319, 0.76811594, 0.76811594, 0.75362319, 0.76811594,
       0.75362319, 0.7826087 ]), 'mean_test_score': array([0.72449275, 0.72875776, 0.72445135, 0.72590062, 0.72312629,
       0.7273499 , 0.72298137, 0.72877847, 0.73020704, 0.73451346,
       0.73447205, 0.73304348, 0.73594203, 0.73594203, 0.73018634,
       0.73304348, 0.73308489, 0.72587992, 0.72016563, 0.72300207,
       0.73592133, 0.72871636, 0.72875776, 0.73016563, 0.73592133,
       0.73020704, 0.73451346, 0.7373913 , 0.73590062, 0.73165631,
       0.72730849, 0.73596273]), 'std_test_score': array([0.07428946, 0.06765806, 0.08040873, 0.06880247, 0.06145192,
       0.06894773, 0.07350031, 0.06940075, 0.06377594, 0.0623174 ,
       0.06635139, 0.06602784, 0.06298001, 0.0642631 , 0.06646716,
       0.06602784, 0.06656982, 0.06505412, 0.07286151, 0.07346078,
       0.07645463, 0.07394795, 0.06841781, 0.07346648, 0.06138039,
       0.06280861, 0.06165895, 0.06011798, 0.06760811, 0.06284955,
       0.06877294, 0.06452151]), 'rank_test_score': array([27, 20, 28, 25, 29, 23, 31, 19, 15,  8, 10, 12,  3,  3, 17, 12, 11,
       26, 32, 30,  5, 22, 20, 18,  5, 15,  8,  1,  7, 14, 24,  2])}
AdaBoostClassifier(estimator=ExtraTreesClassifier(bootstrap=True,
                                                  criterion='entropy',
                                                  max_depth=5,
                                                  max_features=None,
                                                  min_samples_leaf=3,
                                                  min_weight_fraction_leaf=0,
                                                  n_estimators=20, n_jobs=10),
                   learning_rate=1, n_estimators=10000)
[0.02891729 0.01985886 0.02167148 0.02234451 0.02123891 0.02144037
 0.02036966 0.01771767 0.02153331 0.02108809 0.02004092 0.02211227
 0.01738025 0.02576894 0.02351613 0.02416861 0.02320681 0.01521701
 0.02097508 0.01867    0.01633316 0.01739245 0.01585471 0.01466465
 0.01623383 0.01936237 0.01730992 0.0157562  0.01478899 0.01627134
 0.01965749 0.0173286  0.01237347 0.01254444 0.01486348 0.01290998
 0.01357705 0.01679438 0.01769975 0.02243719 0.01325842 0.01615314
 0.01523171 0.01551216 0.02069048 0.01274406 0.0171202  0.02908876
 0.01563806 0.00279868 0.01706511 0.02165835 0.02434104 0.02456997
 0.00274025]
Best parameters set:
        estimator__criterion: 'entropy'
        estimator__max_depth: 5
        estimator__min_samples_split: 2
        learning_rate: 1
        n_estimators: 10000
Test accuracy score: 73.74%